<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class He_companies extends CI_Controller {		/**	 * The Index Page.	 * The controller which shows options to register new patient.	 */	 	function  __construct() {		parent::__construct();		$this->load->model('he_model');		$this->load->library('email');	}		public function index()	{		$this->show_companies();	}		public function companyinfo()	{		$data['active']='he_companies';		$id = $this->input->get('id', TRUE);		$data["he"] = $this->he_model->compayinfo($id);		$this->load->view('infoPages/heInfo',$data);	}		public function show_companies($page=0)	{		$data['active']='he_companies';		$data['sub_active']='he_companies';				if($this->session->userdata(''))			$this->session->unset_userdata('');				$config = array();        $config["base_url"] = base_url() . "he_companies/show_companies";        $config["total_rows"] = $this->he_model->companies_count();        $config["per_page"] = 20;		$config['num_links'] = 3;				$config['full_tag_open'] = '<div class="pagination"><ul>';		$config['full_tag_close'] = '</ul></div>';				$config['first_tag_open'] = '<li class="prev page">';		$config['first_tag_close'] = '</li>';		 		$config['last_tag_open'] = '<li class="next page">';		$config['last_tag_close'] = '</li>';				$config['next_tag_open'] = '<li class="next page">';		$config['next_tag_close'] = '</li>';				$config['prev_tag_open'] = '<li class="prev page">';		$config['prev_tag_close'] = '</li>';		 		$config['cur_tag_open'] = '<li class="active"><a href="">';		$config['cur_tag_close'] = '</a></li>';		 		$config['num_tag_open'] = '<li class="page">';		$config['num_tag_close'] = '</li>';				$config['next_link'] = 'Next';		$config['prev_link'] = 'Prev';         $this->pagination->initialize($config); 		$data['comapny_data'] = $this->he_model->get_companies($config["per_page"], $page);        $data["links"] = $this->pagination->create_links();				$this->load->view('he_companies',$data);	}		public function filtered_companies($page=0)	{		$data['active']='he_companies';		$data['sub_active']='he_companies';				if($this->input->post('', TRUE)) {			$filter = $this->input->post('', TRUE);			$this->session->set_userdata('', $filter);		}		else {			$filter = $this->session->userdata('');		}			$config = array();        $config["base_url"] = base_url() . "he_companies/filtered_companies";        $config["total_rows"] = $this->he_model->companies_filtered_count($filter);        $config["per_page"] = 20;		$config['num_links'] = 3;				$config['full_tag_open'] = '<div class="pagination"><ul>';		$config['full_tag_close'] = '</ul></div>';				$config['first_tag_open'] = '<li class="prev page">';		$config['first_tag_close'] = '</li>';		 		$config['last_tag_open'] = '<li class="next page">';		$config['last_tag_close'] = '</li>';				$config['next_tag_open'] = '<li class="next page">';		$config['next_tag_close'] = '</li>';				$config['prev_tag_open'] = '<li class="prev page">';		$config['prev_tag_close'] = '</li>';		 		$config['cur_tag_open'] = '<li class="active"><a href="">';		$config['cur_tag_close'] = '</a></li>';		 		$config['num_tag_open'] = '<li class="page">';		$config['num_tag_close'] = '</li>';				$config['next_link'] = 'Next';		$config['prev_link'] = 'Prev';         $this->pagination->initialize($config); 		$data['comapny_data'] = $this->he_model->get_filtered_companies($config["per_page"], $page, $filter);        $data["links"] = $this->pagination->create_links();				$data['active']='he_companies';		$this->load->view('he_companies',$data);	}		public function change_active()	{		$id = $this->input->post('id', TRUE);		$status = $this->input->post('status', TRUE);		$userExist = $this->he_model->change_active($id);				if($status == "Inactive")		{			$email = $this->he_model->getResponsible_email($id);			$password = $this->he_model->set_club_user($id,$email->ResponsibleEmail);				$host = USER_HOST;				$message =				"Your Medsquare account has been verified...\n				Login details: \n				Email:  $email->ResponsibleEmail \n				Password: $password \n										Regards,				Medsquare Team								______________________________________________________				THIS IS AN AUTOMATED RESPONSE.				***DO NOT RESPOND TO THIS EMAIL****				";								$this->email->from("From: \"Medsquare\" <auto-reply@$host>\r\n" ."X-Mailer: PHP/" . phpversion());				$this->email->to($email->ResponsibleEmail);								$this->email->subject('Medsquare Account Created');				$this->email->message($message);								$this->email->send();						}else		{			$password = $this->he_model->reset_club_user($id);		}		echo $userExist;	}		public function edit_company_info()	{		$data['active']='he_companies';		$data['sub_active']='he_companies';				$id = $this->input->post('id', TRUE);		$data['comapny_data'] = $this->he_model->get_company_info($id);		$data['comapny_data']= array_merge($data['comapny_data'],$this->he_model->get_company_address($id));		//print_r($data['comapny_data']);		$this->load->view('edit_he',$data);	}		public function edit_info_submit()	{			$HEid  = $this->input->post('HEid', TRUE);			$HEname  = $this->input->post('HEname', TRUE);			$HEnumber   = $this->input->post('HEnumber', TRUE);			$HEDescription   = $this->input->post('HEDescription', TRUE);			$HEDocNum  = $this->input->post('HEDocNum', TRUE);			$HELatitude   = $this->input->post('HELatitude', TRUE);			$HELongitude   = $this->input->post('HELongitude', TRUE);			$HEphoneNumber  = $this->input->post('HEphoneNumber', TRUE);			$HEfax   = $this->input->post('HEfax', TRUE);			$HEContract   = $this->input->post('HEContract', TRUE);			$MedSquareInternalObs   = $this->input->post('MedSquareInternalObs', TRUE);						$Website  = $this->input->post('Website', TRUE);			$ResponsibleName   = $this->input->post('ResponsibleName', TRUE);			$ResponsibleEmail  = $this->input->post('ResponsibleEmail', TRUE);			$ResponsiblePhone  = $this->input->post('ResponsiblePhone', TRUE);			$Address   = $this->input->post('Address', TRUE);			$Zipcode   = $this->input->post('Zipcode', TRUE);			$Country  = $this->input->post('country', TRUE);			$State   = $this->input->post('state', TRUE);			$City   = $this->input->post('City', TRUE);					$arr = array('HEname'=>$HEname,'HEnumber'=>$HEnumber,'HEDescription' =>$HEDescription,'HEDocNum'=>$HEDocNum,'HELatitude'=>$HELatitude,'HELongitude'=>$HELongitude,'HEphoneNumber'=>$HEphoneNumber,'HEfax'=>$HEfax,'HEContract'=>$HEContract,'MedSquareInternalObs'=>$MedSquareInternalObs);						$userReqResult = $this->he_model->edit_company_info($HEid,$arr);						$arr2 = array('Website'=>$Website,'ResponsibleName'=>$ResponsibleName,'ResponsibleEmail' =>$ResponsibleEmail,'ResponsiblePhone'=>$ResponsiblePhone,'Address'=>$Address,'Zipcode'=>$Zipcode,'Country'=>$Country,'State'=>$State,'City'=>$City);						$userReqResult = $this->he_model->edit_company_address($HEid,$arr2);						header('Location: '.base_url().'he_companies');	}		public function add_company()	{		$data['active']='he_companies';		$data['sub_active']='he_companies';				$this->load->view('add_company',$data);	}		public function add_companies()	{			$filename = './files/companies/'.$_FILES['upload']['name'];						copy($_FILES['upload']['tmp_name'],$filename);				function readCSV($csvFile){			$file_handle = fopen($csvFile, 'r');			while (!feof($file_handle) ) {				$line_of_text[] = fgetcsv($file_handle, 1024);			}			fclose($file_handle);			return $line_of_text;		}		$csv = readCSV($filename);				$i=0;		foreach($csv as $row) {						if($row[0]==NULL)				continue;							$i++;			if($i==1) {				continue;			}									$time=strtotime($row[19]);			$convTime = date('Y-m-d H:i:s',$time);						$arr = array('HIGovNum'=>$row[1],'HINationalCompanyID' => $row[2],'HIOfficialName'=>utf8_encode($row[3]),'HIFantasyName'=>utf8_encode($row[4]),'HIActive'=>'1','HIMedSquareInternalObs' => utf8_encode($row[18]),'HIInsertionDate' => $convTime);			$userReqResult = $this->he_model->add_company($arr);						if($userReqResult) {				$arr = array('HICompanyId'=>$userReqResult,'HIAddress'=>utf8_encode($row[5]),'HIAddressNum' => $row[6],'HIComplement'=>utf8_encode($row[7]),'HINeighborhood'=>utf8_encode($row[8]),'HICity' => utf8_encode($row[9]),'HIState' => utf8_encode($row[10]),'HIZipcode' => $row[11],'HICountry' => $row[12],'HIPhoneCode' => $row[13],'HIPhoneNum' => $row[14],'HIFaxNumber' => $row[15],'HIEmail' => utf8_encode($row[16]));				$userReqResult1 = $this->he_model->add_company_address($arr);			}		}				$data['active']='he_companies';		$data['sub_active']='he_companies';		$data['company_added']='Added '.($i-1).' companies successfully.';				$this->load->view('add_company',$data);	}		public function delete_company()	{		$id = $this->input->post('id', TRUE);		$userExist = $this->he_model->delete_company($id);	}		//specializations	public function specializations($page=0)	{		$data['active']='specializations';		$data['sub_active']='he_special';				if($this->session->userdata(''))			$this->session->unset_userdata('');				$config = array();        $config["base_url"] = base_url() . "he_companies/specializations";        $config["total_rows"] = $this->he_model->specials_count();        $config["per_page"] = 20;		$config['num_links'] = 3;				$config['full_tag_open'] = '<div class="pagination"><ul>';		$config['full_tag_close'] = '</ul></div>';				$config['first_tag_open'] = '<li class="prev page">';		$config['first_tag_close'] = '</li>';		 		$config['last_tag_open'] = '<li class="next page">';		$config['last_tag_close'] = '</li>';				$config['next_tag_open'] = '<li class="next page">';		$config['next_tag_close'] = '</li>';				$config['prev_tag_open'] = '<li class="prev page">';		$config['prev_tag_close'] = '</li>';		 		$config['cur_tag_open'] = '<li class="active"><a href="">';		$config['cur_tag_close'] = '</a></li>';		 		$config['num_tag_open'] = '<li class="page">';		$config['num_tag_close'] = '</li>';				$config['next_link'] = 'Next';		$config['prev_link'] = 'Prev';         $this->pagination->initialize($config);		$data['specials']=$this->he_model->specializationlist_getall($config["per_page"], $page);        $data["links"] = $this->pagination->create_links();				$this->load->view('specializations',$data);	}		public function filtered_specializations($page=0)	{		$data['active']='specializations';		$data['sub_active']='he_special';				if($this->input->post('', TRUE)) {			$filter = $this->input->post('', TRUE);			$this->session->set_userdata('', $filter);		}		else {			$filter = $this->session->userdata('');		}			$config = array();        $config["base_url"] = base_url() . "he_companies/filtered_specializations";        $config["total_rows"] = $this->he_model->specials_filtered_count($filter);        $config["per_page"] = 20;		$config['num_links'] = 3;				$config['full_tag_open'] = '<div class="pagination"><ul>';		$config['full_tag_close'] = '</ul></div>';				$config['first_tag_open'] = '<li class="prev page">';		$config['first_tag_close'] = '</li>';		 		$config['last_tag_open'] = '<li class="next page">';		$config['last_tag_close'] = '</li>';				$config['next_tag_open'] = '<li class="next page">';		$config['next_tag_close'] = '</li>';				$config['prev_tag_open'] = '<li class="prev page">';		$config['prev_tag_close'] = '</li>';		 		$config['cur_tag_open'] = '<li class="active"><a href="">';		$config['cur_tag_close'] = '</a></li>';		 		$config['num_tag_open'] = '<li class="page">';		$config['num_tag_close'] = '</li>';				$config['next_link'] = 'Next';		$config['prev_link'] = 'Prev';         $this->pagination->initialize($config); 		$data['specials'] = $this->he_model->specializationlist_getall_filtered($config["per_page"], $page, $filter);        $data["links"] = $this->pagination->create_links();				$this->load->view('specializations',$data);	}		public function change_special_active()	{		$id = $this->input->post('id', TRUE);		$userExist = $this->he_model->change_special_active($id);	}		public function add_specialization()	{		$data['active']='specializations';		$data['sub_active']='he_special';				$this->load->view('add_specialization',$data);	}		public function edit_specialization()	{		$data['active']='specializations';		$data['sub_active']='he_special';				$id = $this->input->post('id', TRUE);		$data['special_data'] = $this->he_model->get_special_info($id);				$this->load->view('edit_specialization',$data);	}		public function edit_special_submit()	{			$specialID  = $this->input->post('specialID', TRUE);			$specialCode  = $this->input->post('specialCode', TRUE);			$specialName  = $this->input->post('specialName', TRUE);			$MedSquareInternalObs   = $this->input->post('MedSquareInternalObs', TRUE);					$arr = array('specialCode'=>$specialCode,'specialName' =>$specialName,'MedSquareInternalObs'=>$MedSquareInternalObs);						$userReqResult = $this->he_model->edit_special_info($specialID,$arr);						header('Location: '.base_url().'he_companies/specializations');	}		public function deleteEntry() {		$id = $this->input->post('id', TRUE);		$userExist =$this->he_model->delete_specialization($id);	}		public function add_newspecialization() {			$sercode  = $this->input->post('scode', TRUE); 			$sername   = $this->input->post('sname', TRUE);			$seriobs = $this->input->post('iobs', TRUE);						$date = date('Y-m-d H:i:s');			$curdate = $date;						$arr = array('specialCode'=>($sercode),'specialName' => ($sername),'MedSquareInternalObs'=>($seriobs),'insertionDate' => ($curdate),'Active' => 1);			$addspecializationResult=$this->he_model->add_specialization($arr);						header('Location:'.base_url().'he_companies/specializations');	}		//services	public function services($page=0)	{		$data['active']='services';		$data['sub_active']='he_services';				if($this->session->userdata(''))			$this->session->unset_userdata('');				$config = array();        $config["base_url"] = base_url() . "he_companies/services";        $config["total_rows"] = $this->he_model->specials_count();        $config["per_page"] = 20;		$config['num_links'] = 3;				$config['full_tag_open'] = '<div class="pagination"><ul>';		$config['full_tag_close'] = '</ul></div>';				$config['first_tag_open'] = '<li class="prev page">';		$config['first_tag_close'] = '</li>';		 		$config['last_tag_open'] = '<li class="next page">';		$config['last_tag_close'] = '</li>';				$config['next_tag_open'] = '<li class="next page">';		$config['next_tag_close'] = '</li>';				$config['prev_tag_open'] = '<li class="prev page">';		$config['prev_tag_close'] = '</li>';		 		$config['cur_tag_open'] = '<li class="active"><a href="">';		$config['cur_tag_close'] = '</a></li>';		 		$config['num_tag_open'] = '<li class="page">';		$config['num_tag_close'] = '</li>';				$config['next_link'] = 'Next';		$config['prev_link'] = 'Prev';         $this->pagination->initialize($config);		$data['services']=$this->he_model->serviceslist_getall($config["per_page"], $page);        $data["links"] = $this->pagination->create_links();				$this->load->view('services',$data);	}		public function filtered_services($page=0)	{		$data['active']='services';		$data['sub_active']='he_services';				if($this->input->post('', TRUE)) {			$filter = $this->input->post('', TRUE);			$this->session->set_userdata('', $filter);		}		else {			$filter = $this->session->userdata('');		}			$config = array();        $config["base_url"] = base_url() . "he_companies/filtered_services";        $config["total_rows"] = $this->he_model->specials_filtered_count($filter);        $config["per_page"] = 20;		$config['num_links'] = 3;				$config['full_tag_open'] = '<div class="pagination"><ul>';		$config['full_tag_close'] = '</ul></div>';				$config['first_tag_open'] = '<li class="prev page">';		$config['first_tag_close'] = '</li>';		 		$config['last_tag_open'] = '<li class="next page">';		$config['last_tag_close'] = '</li>';				$config['next_tag_open'] = '<li class="next page">';		$config['next_tag_close'] = '</li>';				$config['prev_tag_open'] = '<li class="prev page">';		$config['prev_tag_close'] = '</li>';		 		$config['cur_tag_open'] = '<li class="active"><a href="">';		$config['cur_tag_close'] = '</a></li>';		 		$config['num_tag_open'] = '<li class="page">';		$config['num_tag_close'] = '</li>';				$config['next_link'] = 'Next';		$config['prev_link'] = 'Prev';         $this->pagination->initialize($config); 		$data['services'] = $this->he_model->serviceslist_getall_filtered($config["per_page"], $page, $filter);        $data["links"] = $this->pagination->create_links();				$this->load->view('services',$data);	}		public function change_services_active()	{		$id = $this->input->post('id', TRUE);		$userExist = $this->he_model->change_services_active($id);	}		public function add_services()	{		$data['active']='services';		$data['sub_active']='he_services';				$this->load->view('add_services',$data);	}		public function edit_services()	{		$data['active']='services';		$data['sub_active']='he_services';				$id = $this->input->post('id', TRUE);		$data['special_data'] = $this->he_model->get_services_info($id);				$this->load->view('edit_service',$data);	}		public function edit_services_submit()	{			$serviceID  = $this->input->post('serviceID', TRUE);			$serviceCode  = $this->input->post('serviceCode', TRUE);			$serviceName  = $this->input->post('serviceName', TRUE);			$MedSquareInternalObs   = $this->input->post('MedSquareInternalObs', TRUE);					$arr = array('serviceCode'=>$serviceCode,'serviceName' =>$serviceName,'MedSquareInternalObs'=>$MedSquareInternalObs);						$userReqResult = $this->he_model->edit_services_info($serviceID,$arr);						header('Location: '.base_url().'he_companies/services');	}		public function delete_services() {		$id = $this->input->post('id', TRUE);		$userExist =$this->he_model->delete_services($id);	}		public function add_newservice() {			$serviceCode  = $this->input->post('serviceCode', TRUE); 			$serviceName   = $this->input->post('serviceName', TRUE);			$MedSquareInternalObs = $this->input->post('MedSquareInternalObs', TRUE);						$date = date('Y-m-d H:i:s');			$curdate = $date;						$arr = array('serviceCode'=>($serviceCode),'serviceName' => ($serviceName),'MedSquareInternalObs'=>($MedSquareInternalObs),'insertionDate' => ($curdate),'Active' => 1);			$addspecializationResult=$this->he_model->add_services($arr);						header('Location:'.base_url().'he_companies/services');	}		public function add_rating()	{			$queue  = $this->input->post('queue', TRUE);			$ambience   = $this->input->post('ambience', TRUE);			$reception   = $this->input->post('reception', TRUE);			$medical   = $this->input->post('medical', TRUE);			$satisfaction  = $this->input->post('satisfaction', TRUE);			$rating   = $this->input->post('rating', TRUE);			$heid   = $this->input->post('heid', TRUE);			$uid  = $this->input->post('uid', TRUE);			$commenthead   = $this->input->post('commenthead', TRUE);			$comments   = $this->input->post('comments', TRUE);						$date = date('Y-m-d H:i:s');			$curdate = $date;						$arr = array('queue'=>($queue),'ambience'=>($ambience),'reception' => ($reception),'medical'=>($medical),'satisfaction'=>($satisfaction),'rating'=>($rating),'HEId'=>($heid),'uid'=>($uid),'ratingTime'=>($curdate));						$ratingId = $this->he_model->add_rating($arr);						if($commenthead!='') {				echo 'adding comment'.$ratingId;								$arr2 = array('comment'=>($comments),'ratingId'=>($ratingId),'commentHead'=>($commenthead),'heid'=>($heid),'uid'=>($uid),'commentTime'=>($curdate));				$userReqResult2 = $this->he_model->add_comment($arr2);			}	}	}/* End of file welcome.php *//* Location: ./application/controllers/welcome.php */