<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Addhe extends CI_Controller {		/**	 * The Index Page.	 * The controller which shows options to register new patient.	 */	 	function  __construct() {		parent::__construct();		$this->load->model('he_model');	}		public function index()	{		$data['services'] = $this->he_model->serviceslist_getall_foraddhe();		$data['specializations'] = $this->he_model->specializationlist_getall_foraddhe();		$this->load->view('addhe',$data);	}		public function populateAddress()	{		$zipcode  = $this->input->post('zipcode', TRUE);		$data['loc'] = $this->he_model->getDetailsWithZipcode($zipcode);		echo json_encode($data);exit;	}		public function he_submit()	{			$hename  = $this->input->post('hename', TRUE);			$description  = $this->input->post('description', TRUE);			$zipcode  = $this->input->post('zipcode', TRUE);			$country  = $this->input->post('country', TRUE);			$state  = $this->input->post('state', TRUE);			$city  = $this->input->post('city', TRUE);			$address  = $this->input->post('address', TRUE);			$addresscomplement  = $this->input->post('addresscomplement', TRUE);			$phone  = $this->input->post('phone', TRUE);			$fax  = $this->input->post('fax', TRUE);			$queue  = $this->input->post('queue', TRUE);			$contactinfo  = $this->input->post('contactinfo', TRUE);			$website  = $this->input->post('website', TRUE);			$cnpj  = $this->input->post('cnpj', TRUE);			$respname  = $this->input->post('respname', TRUE);			$emailerid  = $this->input->post('emailerid', TRUE);			$respphone  = $this->input->post('respphone', TRUE);						$captcha = $this->input->post('ct_captcha', TRUE);									$HEServices='';			$HESpecializations='';						$err_count=0;			$error='';						if( isset($_POST['services']) && is_array($_POST['services']) ) {				foreach($_POST['services'] as $services) {					$HEServices=$HEServices.$services.',';				}			}			if( isset($_POST['specializations']) && is_array($_POST['specializations']) ) {				foreach($_POST['specializations'] as $specializations) {					$HESpecializations=$HESpecializations.$specializations.',';				}			}						//checking captcha			include './securimage/securimage.php';            $securimage = new Securimage();            if ($securimage->check($captcha) == false) {				$err_count++;				$error = 'Incorrect captcha.'."<br/>";			}						//logo upload			$logoname=substr(number_format(time() * rand(), 0, '', ''), 0, 8);						if(isset($_FILES['logo'])) {				if (preg_match('/^image\/p?jpeg$/i', $_FILES['logo']['type']) or 					preg_match('/^image\/gif$/i', $_FILES['logo']['type']) or 					preg_match('/^image\/(x-)?png$/i', $_FILES['logo']['type'])) 				{ 					if (preg_match('/^image\/p?jpeg$/i', $_FILES['logo']['type'])) 					{ 						$ext = '.jpg'; 					} 					else if (preg_match('/^image\/gif$/i', $_FILES['logo']['type']))					{ 						$ext = '.gif'; 					} 					else if (preg_match('/^image\/(x-)?png$/i', $_FILES['logo']['type'])) 					{ 						$ext = '.png'; 					}										$logoname = './images/HE_logos/'.$logoname.$ext;				}				else				{ 					$err_count++;					$error = $error.'Select a JPEG, GIF, or PNG image file for logo.'."<br/>";				}			}			else 			{ 				$err_count++;				$error = $error.'Selected logo is too large.'."<br/>";			}						$imagenames=array();						if (isset($_FILES['images1'])) {							$count=1;				for($i=1;$i< count($_FILES); $i++) {					if (!$_FILES['images'.$i]['error']==4) 						$count++;				}								for($i=1;$i< $count; $i++) {					$imagenames[$i]=substr(number_format(time() * rand(), 0, '', ''), 0, 8);										if (preg_match('/^image\/p?jpeg$/i', $_FILES['images'.$i]['type']) or 						preg_match('/^image\/gif$/i', $_FILES['images'.$i]['type']) or 						preg_match('/^image\/(x-)?png$/i', $_FILES['images'.$i]['type'])) 					{ 						if (preg_match('/^image\/p?jpeg$/i', $_FILES['images'.$i]['type'])) 						{ 							$ext = '.jpg'; 						} 						else if (preg_match('/^image\/gif$/i', $_FILES['images'.$i]['type']))						{ 							$ext = '.gif'; 						} 						else if (preg_match('/^image\/(x-)?png$/i', $_FILES['images'.$i]['type'])) 						{ 							$ext = '.png'; 						}												$imagenames[$i] = './images/HE_photos/'.$imagenames[$i].$ext;						//echo 'Image name for '.$_FILES['images'.$i]['name'].' is '.$imagenames[$i].'<br/>';					}					else					{ 						$err_count++;						$error = $error.'Select a JPEG, GIF, or PNG image file for images.'."<br/>";						break;					}				}			}			else 			{ 				$err_count++;				$error = $error.'One or more of selected images are too large.'."<br/>";			}						if($err_count > 0) {							$newdata = array(                   'hename'  => $hename,                   'description'  => $description,                   'zipcode'  => $zipcode,                   'city'  => $city,                   'address'  => $address,                   'addresscomplement'  => $addresscomplement,                   'phone'  => $phone,                   'fax'  => $fax,                   'queue'  => $queue,                   'contactinfo'  => $contactinfo,                   'website'  => $website,                   'cnpj'  => $cnpj,                   'respname'  => $respname,                   'emailerid'  => $emailerid,                   'respphone'  => $respphone,                   'error'  => $error,				);				$this->session->set_userdata($newdata);								//echo $error;				header('Location: '.base_url().'addhe/addhe');			}			else {				//uploading logo				copy($_FILES['logo']['tmp_name'],$logoname);				$logoname=str_replace("./images",URL_FOR_HEAD."images",$logoname);								for($i=1;$i< $count; $i++) {					//echo 'uploading file '.$_FILES['images'.$i]['name'].'<br/>';					copy($_FILES['images'.$i]['tmp_name'],$imagenames[$i]);					$imagenames[$i]=str_replace("./images",URL_FOR_HEAD."images",$imagenames[$i]);				}								$date = date('Y-m-d H:i:s');				$curdate = $date;								//calculationg gps coordinates								$encodedAddress=$address.', '.$city.', '.$state.', '.$country;								$bad = array(					" " => "+",					"?" => "",					"&" => "",					"=" => ""				);				$encodedAddress = str_replace(array_keys($bad), array_values($bad), $encodedAddress);								$data = file_get_contents('http://maps.googleapis.com/maps/api/geocode/json?address='.$encodedAddress.'&sensor=false');				$data=json_decode($data);				$lat=$data->results[0]->geometry->location->lat;				$lng=$data->results[0]->geometry->location->lng;								$queue = '30';								$arr = array('HEname'=>($hename),'HElogo'=>($logoname),'HEnumber' => ($cnpj),'HEDescription'=>($description),'HEcomplement'=>($addresscomplement),'HEQueueTime'=>($queue),'HEphoneNumber'=>($phone),'HEfax' => ($fax),'HEServices' => ($HEServices),'HESpecializations' => ($HESpecializations),'HEHierarchy' => 1,'HElocalSearch' => 1,'HERegistryData' => 1,'Active' => 0,'RegistrationDate' => ($curdate),'HEQueueUpdateTime'=>($curdate),'HELatitude' => ($lat),'HELongitude' => ($lng));								$userReqResult = $this->he_model->add_he($arr);								$arr2 = array('HEId'=>($userReqResult),'ResponsibleName'=>($respname),'ResponsibleEmail' => ($emailerid),'ResponsiblePhone'=>($respphone),'Website'=>($website),'Country'=>($country),'State'=>($state),'City'=>($city),'Zipcode' => ($zipcode),'Address' => ($address));				$userReqResult1 = $this->he_model->add_he_address($arr2);				$this->load->view('addhe_success');			}	}		public function check_coordinate() {				$address="88 Main St. New York New York USA";				$data = file_get_contents('http://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&sensor=false');		$data=json_decode($data);		$lat=$data->results[0]->geometry->location->lat;		$lng=$data->results[0]->geometry->location->lng;				echo $lat.$lng;	}}/* End of file welcome.php *//* Location: ./application/controllers/welcome.php */